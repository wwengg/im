// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pbgate/gate.proto

package pbgate

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Cmd int32

const (
	Cmd_SerializeNone Cmd = 0
	Cmd_JSON          Cmd = 1
	Cmd_ProtoBuffer   Cmd = 2
)

var Cmd_name = map[int32]string{
	0: "SerializeNone",
	1: "JSON",
	2: "ProtoBuffer",
}

var Cmd_value = map[string]int32{
	"SerializeNone": 0,
	"JSON":          1,
	"ProtoBuffer":   2,
}

func (x Cmd) String() string {
	return proto.EnumName(Cmd_name, int32(x))
}

func (Cmd) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0160d96a053584ba, []int{0}
}

type SendMsgDataToType int32

const (
	SendMsgData_To_None SendMsgDataToType = 0
	SendMsgData_To_Conn SendMsgDataToType = 1
	SendMsgData_To_All  SendMsgDataToType = 2
)

var SendMsgDataToType_name = map[int32]string{
	0: "To_None",
	1: "To_Conn",
	2: "To_All",
}

var SendMsgDataToType_value = map[string]int32{
	"To_None": 0,
	"To_Conn": 1,
	"To_All":  2,
}

func (x SendMsgDataToType) String() string {
	return proto.EnumName(SendMsgDataToType_name, int32(x))
}

func (SendMsgDataToType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0160d96a053584ba, []int{0, 0}
}

type SendMsgDataReplyCodeType int32

const (
	SendMsgDataReply_Code_None SendMsgDataReplyCodeType = 0
	SendMsgDataReply_Success   SendMsgDataReplyCodeType = 200
)

var SendMsgDataReplyCodeType_name = map[int32]string{
	0:   "Code_None",
	200: "Success",
}

var SendMsgDataReplyCodeType_value = map[string]int32{
	"Code_None": 0,
	"Success":   200,
}

func (x SendMsgDataReplyCodeType) String() string {
	return proto.EnumName(SendMsgDataReplyCodeType_name, int32(x))
}

func (SendMsgDataReplyCodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0160d96a053584ba, []int{1, 0}
}

type SendMsgData struct {
	To                   int64             `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	Type                 SendMsgDataToType `protobuf:"varint,2,opt,name=type,proto3,enum=pbgate.SendMsgDataToType" json:"type,omitempty"`
	DataJson             []byte            `protobuf:"bytes,4,opt,name=dataJson,proto3" json:"dataJson,omitempty"`
	DataProto            []byte            `protobuf:"bytes,5,opt,name=dataProto,proto3" json:"dataProto,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SendMsgData) Reset()         { *m = SendMsgData{} }
func (m *SendMsgData) String() string { return proto.CompactTextString(m) }
func (*SendMsgData) ProtoMessage()    {}
func (*SendMsgData) Descriptor() ([]byte, []int) {
	return fileDescriptor_0160d96a053584ba, []int{0}
}
func (m *SendMsgData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendMsgData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendMsgData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendMsgData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgData.Merge(m, src)
}
func (m *SendMsgData) XXX_Size() int {
	return m.Size()
}
func (m *SendMsgData) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgData.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgData proto.InternalMessageInfo

func (m *SendMsgData) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *SendMsgData) GetType() SendMsgDataToType {
	if m != nil {
		return m.Type
	}
	return SendMsgData_To_None
}

func (m *SendMsgData) GetDataJson() []byte {
	if m != nil {
		return m.DataJson
	}
	return nil
}

func (m *SendMsgData) GetDataProto() []byte {
	if m != nil {
		return m.DataProto
	}
	return nil
}

type SendMsgDataReply struct {
	Code                 SendMsgDataReplyCodeType `protobuf:"varint,1,opt,name=code,proto3,enum=pbgate.SendMsgDataReplyCodeType" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SendMsgDataReply) Reset()         { *m = SendMsgDataReply{} }
func (m *SendMsgDataReply) String() string { return proto.CompactTextString(m) }
func (*SendMsgDataReply) ProtoMessage()    {}
func (*SendMsgDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0160d96a053584ba, []int{1}
}
func (m *SendMsgDataReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendMsgDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendMsgDataReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendMsgDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMsgDataReply.Merge(m, src)
}
func (m *SendMsgDataReply) XXX_Size() int {
	return m.Size()
}
func (m *SendMsgDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMsgDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_SendMsgDataReply proto.InternalMessageInfo

func (m *SendMsgDataReply) GetCode() SendMsgDataReplyCodeType {
	if m != nil {
		return m.Code
	}
	return SendMsgDataReply_Code_None
}

func init() {
	proto.RegisterEnum("pbgate.Cmd", Cmd_name, Cmd_value)
	proto.RegisterEnum("pbgate.SendMsgDataToType", SendMsgDataToType_name, SendMsgDataToType_value)
	proto.RegisterEnum("pbgate.SendMsgDataReplyCodeType", SendMsgDataReplyCodeType_name, SendMsgDataReplyCodeType_value)
	proto.RegisterType((*SendMsgData)(nil), "pbgate.SendMsgData")
	proto.RegisterType((*SendMsgDataReply)(nil), "pbgate.SendMsgDataReply")
}

func init() { proto.RegisterFile("pbgate/gate.proto", fileDescriptor_0160d96a053584ba) }

var fileDescriptor_0160d96a053584ba = []byte{
	// 333 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x6a, 0xc2, 0x40,
	0x10, 0xc7, 0xbb, 0x31, 0x8d, 0x71, 0xfc, 0xe8, 0xba, 0x85, 0x12, 0xa4, 0x88, 0xcd, 0xa5, 0xd2,
	0xc3, 0x0a, 0x4a, 0xa1, 0xc7, 0x56, 0x0b, 0x05, 0xa1, 0xb6, 0x24, 0x9e, 0x7a, 0x91, 0x35, 0x19,
	0x45, 0x48, 0xb3, 0x21, 0x59, 0x0f, 0xf6, 0xc5, 0xfa, 0x0a, 0x1e, 0xfb, 0x08, 0xc5, 0x27, 0x29,
	0xf9, 0xb0, 0xf5, 0x60, 0x2f, 0xcb, 0xcc, 0x7f, 0x7f, 0xb3, 0xfb, 0x5b, 0x16, 0x9a, 0xd1, 0x7c,
	0x29, 0x14, 0xf6, 0xd2, 0x85, 0x47, 0xb1, 0x54, 0x92, 0x19, 0x79, 0x64, 0x7f, 0x12, 0xa8, 0xba,
	0x18, 0xfa, 0xcf, 0xc9, 0xf2, 0x51, 0x28, 0xc1, 0x1a, 0xa0, 0x29, 0x69, 0x91, 0x0e, 0xe9, 0x96,
	0x1c, 0x4d, 0x49, 0xc6, 0x41, 0x57, 0x9b, 0x08, 0x2d, 0xad, 0x43, 0xba, 0x8d, 0x7e, 0x8b, 0xe7,
	0x63, 0xfc, 0x60, 0x84, 0x2b, 0x39, 0xdd, 0x44, 0xe8, 0x64, 0x1c, 0x6b, 0x81, 0xe9, 0x0b, 0x25,
	0xc6, 0x89, 0x0c, 0x2d, 0xbd, 0x43, 0xba, 0x35, 0xe7, 0xb7, 0x67, 0x97, 0x50, 0x49, 0xeb, 0xd7,
	0x54, 0xc0, 0x3a, 0xcd, 0x36, 0xff, 0x02, 0x9b, 0x83, 0x91, 0x9f, 0xc4, 0xaa, 0x50, 0x9e, 0xca,
	0xd9, 0x44, 0x86, 0x48, 0x4f, 0x8a, 0x66, 0x24, 0xc3, 0x90, 0x12, 0x06, 0x60, 0x4c, 0xe5, 0xec,
	0x21, 0x08, 0xa8, 0x66, 0xc7, 0x40, 0x0f, 0x2c, 0x1c, 0x8c, 0x82, 0x0d, 0xbb, 0x05, 0xdd, 0x93,
	0x3e, 0x66, 0xfe, 0x8d, 0xfe, 0xd5, 0x11, 0xdb, 0x8c, 0xe3, 0x29, 0x94, 0x4b, 0xa7, 0x95, 0x7d,
	0x0d, 0xe6, 0x3e, 0x61, 0x75, 0xa8, 0x8c, 0xa4, 0x8f, 0xfb, 0xeb, 0x6b, 0x50, 0x76, 0xd7, 0x9e,
	0x87, 0x49, 0x42, 0xb7, 0xe4, 0x66, 0x00, 0x25, 0xef, 0xdd, 0x67, 0x4d, 0xa8, 0xbb, 0x18, 0xaf,
	0x44, 0xb0, 0xfa, 0xc0, 0x82, 0x33, 0x41, 0x1f, 0xbb, 0x2f, 0x13, 0x4a, 0xd8, 0x19, 0x54, 0xb3,
	0x07, 0x0d, 0xd7, 0x8b, 0x05, 0xc6, 0x54, 0xeb, 0xdf, 0x83, 0xfe, 0x24, 0x14, 0xb2, 0x3b, 0x28,
	0x17, 0x22, 0xec, 0xfc, 0x88, 0x59, 0xcb, 0xfa, 0x4f, 0x77, 0x78, 0xb1, 0xdd, 0xb5, 0xc9, 0xd7,
	0xae, 0x4d, 0xbe, 0x77, 0x6d, 0xf2, 0x66, 0xf2, 0x5e, 0x0e, 0xce, 0x8d, 0xec, 0x2f, 0x07, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x15, 0x5c, 0x52, 0xb0, 0xe0, 0x01, 0x00, 0x00,
}

func (m *SendMsgData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendMsgData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendMsgData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DataProto) > 0 {
		i -= len(m.DataProto)
		copy(dAtA[i:], m.DataProto)
		i = encodeVarintGate(dAtA, i, uint64(len(m.DataProto)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DataJson) > 0 {
		i -= len(m.DataJson)
		copy(dAtA[i:], m.DataJson)
		i = encodeVarintGate(dAtA, i, uint64(len(m.DataJson)))
		i--
		dAtA[i] = 0x22
	}
	if m.Type != 0 {
		i = encodeVarintGate(dAtA, i, uint64(m.Type))
		i--
		dAtA[i] = 0x10
	}
	if m.To != 0 {
		i = encodeVarintGate(dAtA, i, uint64(m.To))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SendMsgDataReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendMsgDataReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendMsgDataReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Code != 0 {
		i = encodeVarintGate(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGate(dAtA []byte, offset int, v uint64) int {
	offset -= sovGate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SendMsgData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.To != 0 {
		n += 1 + sovGate(uint64(m.To))
	}
	if m.Type != 0 {
		n += 1 + sovGate(uint64(m.Type))
	}
	l = len(m.DataJson)
	if l > 0 {
		n += 1 + l + sovGate(uint64(l))
	}
	l = len(m.DataProto)
	if l > 0 {
		n += 1 + l + sovGate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendMsgDataReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Code != 0 {
		n += 1 + sovGate(uint64(m.Code))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovGate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGate(x uint64) (n int) {
	return sovGate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SendMsgData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendMsgData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendMsgData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			m.To = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.To |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			m.Type = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Type |= SendMsgDataToType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataJson", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGate
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataJson = append(m.DataJson[:0], dAtA[iNdEx:postIndex]...)
			if m.DataJson == nil {
				m.DataJson = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DataProto", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGate
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DataProto = append(m.DataProto[:0], dAtA[iNdEx:postIndex]...)
			if m.DataProto == nil {
				m.DataProto = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendMsgDataReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendMsgDataReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendMsgDataReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= SendMsgDataReplyCodeType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGate
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGate = fmt.Errorf("proto: unexpected end of group")
)
